{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACjBC,mBAAS,IADQ,mBAC9CC,EAD8C,KAClCC,EADkC,KAgBrD,OACE,oCACE,iDACA,0BAAMC,SAZW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAQZ,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAjBlB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAgBgDG,YAAY,8B,2BCvB1EC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCqBLO,MAlBf,SAAsBf,GAAW,IAAD,EACJf,mBAAS,CACjCsB,KAAM,GACNS,SAAS,IAHmB,mBACvBC,EADuB,KAChBC,EADgB,KAe9B,OATAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAACC,GAAD,OACrBH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAGZ,CAAChB,IAEGiB,GChBM,SAASK,EAAT,GAAsC,IAAfV,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAC3C,OACE,yBAAKqB,UAAU,0CACb,yBAAKC,IAAKtB,EAAKuB,IAAI,YACnB,2BAAIb,ICiBKc,MAnBf,YAAgC,IAAb1B,EAAY,EAAZA,SAAY,EACKe,EAAaf,GAAjCa,EADe,EACrBN,KAAcS,EADO,EACPA,QAEtB,OACE,oCACE,wBAAIO,UAAU,qCAAd,cAA8DvB,GAE7DgB,GACC,uBAAGO,UAAU,oCAAb,cAEF,yBAAKA,UAAU,aACZV,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAACY,EAAD,eAAaK,IAAKjB,EAAIC,IAAQD,UCZzB,SAASkB,IAAgB,IAAD,EACD3C,mBAAS,IADR,mBAC9B4C,EAD8B,KAClB7C,EADkB,KAGrC,OACE,oCACE,4CACA,kBAACD,EAAD,CAAaC,cAAeA,IAC5B,wBAAIuC,UAAU,SACd,4BACGM,EAAWrC,OAAS,EACnBqC,EAAWpB,KAAI,SAACT,GAAD,OACb,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,OAGpC,wBAAIuB,UAAU,gBAAd,sB,MCbVO,IAASC,OAAO,kBAACH,EAAD,MAAkBI,SAASC,eAAe,U","file":"static/js/main.f0ef63db.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function AddCategory({ setCategories }) {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <>\n      <h3>Agregar Categoria</h3>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} placeholder=\"Realiza una busqueda...\"/>\n      </form>\n    </>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=RdLFxRadmED0wnCjzf37GVG3M2yhGeJR`\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  })\n\n  return gifs\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nfunction useFetchGifs(category) {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n    getGifs(category).then((imgs) =>\n      setState({\n        data: imgs,\n        loading: false,\n      })\n    )\n  }, [category])\n\n  return state\n}\n\nexport default useFetchGifs\n","import React from 'react'\n\nexport default function GifGridItem({ title, url }) {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt=\"Gif pic\" />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport useFetchGifs from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem'\n\nfunction GifGrid({ category }) {\n  const { data: images, loading } = useFetchGifs(category)\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">Resultado: {category}</h3>\n\n      {loading && (\n        <p className=\"animate__animated animate__flash\">Loading...</p>\n      )}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nexport default function GifExpertApp() {\n  const [categories, setCategories] = useState([])\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr className=\"mt-2\"/>\n      <ol>\n        {categories.length > 0 ? (\n          categories.map((category) => (\n            <GifGrid key={category} category={category} />\n          ))\n        ) : (\n          <h1 className=\"center mt-10\">No hay busquedas</h1>\n        )}\n      </ol>\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GifExpertApp from './GifExpertApp'\nimport './index.css'\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))\n"],"sourceRoot":""}